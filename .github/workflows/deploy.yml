name: Build and Deploy to EC2

on:
  push:
    branches:
      - master

env:
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  EC2_HOST_IP: ${{ secrets.EC2_HOST_IP }}

jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push auth-service
        working-directory: ./auth-service
        run: |
          docker build -t $ECR_REGISTRY/auth-service:latest .
          docker push $ECR_REGISTRY/auth-service:latest

      - name: Build, Tag, and Push products-service
        working-directory: ./products-service 
        run: |
          docker build -t $ECR_REGISTRY/products-service:latest .
          docker push $ECR_REGISTRY/products-service:latest
          

      - name: Build, Tag, and Push frontend-client
        working-directory: ./frontend-client
        run: |
          docker build -t $ECR_REGISTRY/frontend-client:latest .
          docker push $ECR_REGISTRY/frontend-client:latest

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push 
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EC2_SSH_KEY }}
          name: id_rsa 
          known_hosts: 'just-a-placeholder'

      - name: Add EC2 host to known_hosts
        run: |
          ssh-keyscan -H ${{ secrets.EC2_HOST_IP }} >> ~/.ssh/known_hosts

      - name: Copy docker-compose.yml to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
            ./docker-compose.yml \
            ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST_IP }}:~/docker-compose.yml

      - name: Deploy on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST_IP }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            export ECR_REGISTRY=${{ secrets.ECR_REGISTRY }}
            export EC2_HOST_IP=${{ secrets.EC2_HOST_IP }}
            
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
            
            cd ~
            
            docker-compose pull

            docker-compose up -d --force-recreate